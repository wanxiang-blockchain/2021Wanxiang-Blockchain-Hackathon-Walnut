module.exports = {
  commen: {
    userlogin: "Login",
    steemAccoutPlaceHolder: "Steem Account",
    hiveAccountPlaceHolder: "Hive account",
    steemActiveKeyPlaceHolder: "Please input Steem active key",
    hiveActiveKeyPlaceHolder: "Please input Hive active key",
    login: "Login",
    loginByKeychain: "Login by Keychain",
    loging: "Logining...",
    cancel: "Cancel",
    confirm: "Confirm",
    add: "Add",
    update: "Update",
    crowdstaking: "Staking",

    apy: "APY",
    withdraw: "Harvest",
    balance: "Balance",
    approveContract: "Approve Contract",
    max: "Max",
    delegatecharge: "Delegate Charge",
    logout: "Log out",
    input: "Input",
    copy: "Copy",
    complete: "Complete",
    now: "Now",
    connectMetamask: "Connect Wallet",

    whitePaper: "White Paper",
    nps: "Nutbox Proposal System",
    contract: "Contract Address",
    social: "Social info",
    docs: "Docs",
    discord: "Discord",
    blog: "Blog",
    contractAddr: "Contract Address",
    search: "Search",
    dashboard: "Dashboard",
    language: "Language",
    zh: "中文",
    en: "English",
    kr: "한국어",
    my: "Malaysia",
    tr: "Türkçe",
    es: "Español",
    jp: "日本語",
    goToHome: "Back to homepage",
    home: 'Home',
    dappStore: 'DApp Store'
  },
  tutorial: {
    createProcess: "Create Process",
    step0: "Step0: Register Asset",
    step1: "Step1: Choose asset & Set distribution strategy",
    step2: "Step2: Fill in community info",
    step3: "Step3: Create staking pool",
    demoVideo: "Demo Video",
    getStart: "Get Started",
    watchVideo: "Watch Demo Video",
    videoTip1:
      "In this video, we will walk you through the staking pool generation process, from start to finish. It takes less than {min} minutes.",
    videoTip2: "Click on the play button to start the video",
  },
  wallet: {
    wallet: "Wallet",
    connectSteem: "Connect Steem Wallet",
    connectHive: "Connect Hive Wallet",
    install: "Install",
    transfer: "Transfer",
    asset: "Asset",
    nomination: "Vote Delegators ",
    contribution: "Crowdloan",
    balance: "balance",
    bond: "Bonding",
    unBond: "Unbonding",
    redeem: "Redeem",
    bindAmount: "Binding Amount",
    inputAmount: "Input Amount",
    receiveAddress: "Receiver Address",
    transferAmount: "Transfer Amount",
    unbindAmount: "Unbinding amount",
  },
  cs: {
    crowdstaking: "Crowdstaking",
    deposit: "Deposit",
    steemDelegate: "Steem Delegate",
    hiveDelegate: "Hive Delegate",
    delegate: "Delegate",
    crowdloan: "Crowdloan",
    nomination: "Nominate",
    community: "Community",
    nominate: "Vote",
    nominated: "Voted",
    bond: "Bonding",
    bondedAmount: "Bonded",
    available: "Availabe Catiptal",
    bondAndNominate: " Bonding and Vote",
    cancel: "Cancel",
    bondInfo1:
      "Please retain some amount of cryptocurrencies for further transaction fees",
    bondInfo2: "The minimum bonding amount is {min} {symbol}.",
    bondInfo3: "The unbinding process will take {days} day.",
    confirm: "Confirm",
    cancelValidorsInfo:
      "Please cancel at least {} nodes you voted, before you vote other nodes",
  },
  validator: {
    validator: "Validator",
    commission: "Commission",
    otherStake: "Others' staking",
    ownStake: "Myself staking",
    waiting: "Waiting",
  },
  date: {
    year: " Year ",
    month: " Month ",
    day: " Day ",
    hour: " Hour ",
    min: " Minute ",
    sec: " Second ",
  },
  cl: {
    crowdloan: "Crowdloan",
    community: "Community",
    contribute: "Contribute",
    withdraw: "Withdraw",
    youWillWithdraw: "You Would Withdraw",
    confirm: "Comfirm & Sign",
    amount: "Amount",
    inputAmount: "Staking amount",
    nominator: "Nominator",
    inputNominator: "Your Nominator's address",
    optional: "(Optional)",
    completed: "Completed",
    leasePeriod: "Lease Period",
    countDown: "Countdown",
    rewards: "Rewards",
    auctionPlan: "Crowdloan Reward",
    auctionInfo: "Crowdloan Detail",
    joinAuction: "Join Crowdloan",
    raised: "Raised",
    fund: "Fund",
    progress: "Progress",
    contributors: "Contributors",
    contributed: "My Contribution",
    myBalance: "Balance of {token}",
    Active: "Active",
    Winner: "Winner",
    Retired: "Retired",
    Completed: "Completed",
    chain: "Chain",
    trieIndex: "TrieIndex",
    contributeAmount: "Contribute amount",
    contributeTime: "Contribute time",
  },
  transaction: {
    broadcasting: "Transaction Is Broadcasting.",
    inBlock: "Transaction included at blockHash.",
    contributeOk: "Contribution Success!",
    withdrawOk: "Withdraw Success!",
    nominateOk: "Nominate Success!",
    transactionOk: "Transaction Success!",
    depositOk: "Deposit Success",
    withdrawOk: "Decrease Deposit Success!",
  },
  stake: {
    stake: "Staking Mining",
    creaseDelegation: "Delegate",
    increaseDelegation: "Undelegate",
    getSp: "Get SP",
    get: "Get",
    stake: "Deposit",
    unStake: "Undeposit",
    staked: "Staked ",
  },
  tip: {
    approveSuccess: "Approval Success",
    loading: "Loading, Please wait",
    connectingPolkadot: "Connecting Polkadot network",
    noAuction: "No onging Auction ",
    noProject: "No ongoing Project",
    noNominations: "No Nominators Nodes",
    noContribuitons: "No Contribution Records",
    noCommunities: "No Registerd Communities ",
    noCrowdloan: "No ongoing Crwodloan",
    noStakingProject: "No validators",
    tokenSafeTip:
      "Your asset would be locked into {symbol} official crowdloan pallet directly, not any accounts of Nutobx.",
    belowMinContribution:
      "Input is less than the minimum allowed contribution of  {min}",
    belowMinBond: "Input is less than the minimum surggest bonded of 0.1",
    wrongNominatorAddress: "Wrong Nominator Address",
    wrongTransferAddress: "Wrong Transfer Address",
    inputAddressType: "Please Input {relaychain} Address",
    insufficientBalance: "Insufficient Balance",
    outOfCap: "Out of cap",
    tips: "Tips",
    error: "Error！",
    success: "Success!",
    warning: "Warning！",
    noNeedWithdraw: "No Need To Withdraw",
    comingSoon: "Coming Soon",
    clipboard: "Clipboard",
    copyAddress: "Copied address:  {address}",
    signing: "Signing",
    picUploadFail: "Pictrues fail to uplod, Please try again",
    uploadLogo: "Please upload logo",
    deloyTokenFail: "Token fail to deloy, Please try again",
    notContractAddress: "Pleae Provide Deloy Token Contract Address",
    registryAssetFail: "Registry Asset Fail",
    registryAssetSuccess: "Registry Asset Success",
    wrongStartBlockNum:
      "Start BlockNum must be larger than the current BlockNum",
    wrongStopBlockNum: "Stop BlcokNum must be larger than the Start BlockNum",
    youHaveCreatedCommunity: "You Have Created Community",
    pleaseFillData: "Please select delpoy asset and distribution policies",
    deployFactoryFail: "Factory Fail to delpoy, Please try agian",
    deployFactorySuccess: "Factory deloy Success, Please wait",
    deploySuccess: "Deloy Success",
    storeTokenAddress:
      "Please confirm the information and store Token Address immediately",
    needName: "Please input Community Name",
    needWebsit: "Please input Community Website",
    needDescription: "Please input Community Desctiption",
    needIcon: "Please upload Community Logo",
    needPoster: "Please Upload Community Poster",
    completeCommunityInfoSuccess: "Community Information update successfully",
    wrongSubstrateAddress: "Please input correct {type} address",
    ratioError: "The total porpotion of Staking Pool is 100",
    wrongApy: "Please input correct APY",
    wrongRewardNum: "Please input correct rewards",
    createBlogSuccess: "Create Blog Success!",
    communityNameLimit: "The community name cannot exceed {count} words",
    needRightUrl: "Please input right url.",
    selectCowdloan: "Please selecte a crowdloan project.",
    inputRightBlogTag:
      "Please input a right steem community tag. eg:hive-12345.",
    withdrawSuccess: "Harvest success!",
    deploying: "Deploying, maybe cost you some time, please wait for a moment.",
    stopPoolOk: "Pool has been stopped",
    removePoolOk: "Pool has been removed",
    tryWithdrawOk: "Redeem success.",
    stopPoolTips: "Need set pool ratio to 0 before stop pool.",
    completeCommunityProposalConfigSuccess: "Community proposal config success",
    completeProposalSuccess: "Proposal success",
    completeVoteSuccess: "Vote success",
    needGameName: "Please input game name",
    gameNameLimit: "The game name cannot exceed{count}words",
    needGameType: "Please choose game type",
    completeGameSuccess: "Game Success",
  },
  nps: {
    nps: "Governance",
    npsTemp:
      "Show Peanut governance for example. Walnut governance is under develoment.",
    all: "All",
    pass: "Passed",
    pending: "Pending",
    unpass: "Rejected",
    rolling: "Voting",
    mine: "My publish",
    title: "Title",
    titleInputTip: "Please input title",
    startAndEndTime: "Start & end time",
    startTime: "Start time",
    endTime: "End time",
    details: "Details",
    detailsInputTip: "Please input proposal details.",
    proposalConfigLabel: "Proposal Config",
    voteProposal: "Vote Proposal",
    createProposal: "Create Proposal",
    noProposals: "No proposals",
    proposalTitle: "Title",
    proposalTitleInput: "Please input proposal title",
    proposalStart: "Start time",
    proposalEnd: "End time",
    proposalFirst_Block: "Start block",
    proposalEnd_Block: "Stop block",
    proposalBody: "Detail",
    proposalBodyPreview: "Preview",
    proposalBodyInput: "Please input detail",
    proposalNetwork: "Network",
    proposalNetworkInput: "Please select Network",
    proposalSymbol: "Symbol",
    proposalSymbolInput: "Please input symbol",
    proposalStrategies: "Strategies",
    proposalThreshold: "Threshold",
    proposalThresholdInput: "Please input threshold",
    proposalPassThreshold: "Pass threshold",
    proposalPassThresholdInput: "Please input pass threshold",
    proposalValidation: "Validation",
    proposalValidationInput: "Please input validation",
    proposalAgreeBtn: "Agree",
    proposalDisagreeBtn: "Disagree",
    propsalSureVote: "Are you sure",
    propsalVoteRight: "Your voting rights",
    propsalVoteRemind: "Are you sure {0}?",
    propsalVoteStatusWaitStart: "Wait",
    propsalVoteStatusDoing: "Voting",
    propsalVoteStatusEnd: "End",
    proposalInfo: "Proposal Info",
    proposalVoteNum: "Vote Number",
    proposalVoteResult: "Vote Result",
    proposalStatus: "Vote status",
    editProposalConfigBtn: "ProposalConfig",
    editStrategy: "Edit Strategy",
    validationWarning: {
      basic: {
        minScore:
          "You need to have a minimum of {0} {1} in order to submit a proposal.",
      },
      customValidation:
        "You need to pass the proposal validation in order to submit a proposal.",
    },
    remarkInput: "Please input intro",
    remark: "Intro",
    markdownTip: "Your use markdown format.",
    downloadReport: "Download Report.",
  },
  error: {
    error: "Error",
    depositFail: "Deposit Fail",
    withdrawFail: "Withdraw Fail",
    changeDepsitFail: "Change deposition fail",
    delegateFail: "Delegate fail",
    changeDelegateFail: "Change delegation fail",
    approveFail: "Approve fail",
    accountChanged:
      "Steem and tron address mismatch，Please confirm whether the wallet account is switched",
    delegateerror: "Delegation Error！",
    tryrefreshpage: "Error，please refresh page and try again！",
    steemloginerr: "Steem login failed!",
    needkeychainandtronlink: "Need to install Steem Keychain and TronLink！",
    needkeychain: "Please install Steem Keychain",
    needtronlink: "Please install TronLink",
    insufficientEnerge: "Not enough energy",
    transferFail: "Transfer Fail",
    unlockKeychain: "Please unlock Steem Keychain",
    unlockWallet: "Plase unlock tronlink",
    steemLoginFail: "Steem login fail",
    hiveLoginFail: "Hive login fail",
    illegalTronAddress: "Invalid tron address",
    inputError: "Input wrong value",
    inputOverflow: "Input overflow",
    inputOutOfRange:
      "Please input value between {lowerPnutAmount}-{upperPnutAmount}",
    inputLinkIllegal: "Please input correct link",
    notEnoughFee: "Insufficient fee",
    insufficentPnut: "Insufficient Pnut",
    hasVoted: "Your post has been voted by nutbox.mine",
    pleaseRetry: "Please try agian",
    signatureFailed: "Signature fail，Please refresh the page and retry",
    serveError: "Server Error",
    networkError: "Network Error",
    noStakingFactory: "You have not created a community yet",
    blockChainError: "Contract invocation error",
    cancelSigning: "Signing cancel",
    unknow: "Unkonwn error",
    notConnectWallet: "Wallet not Connect",
    unlockWallet: "Please unlock Wallet",
    wrongChainId: "Wrong ChainID",
    wrongETHAddress: "Wrong ETH Address",
    wrongInputDevRatio: "Please input number between 0-100",
    notTokenContract: "The address you input is not a ERC20 contract address.",
    transactionFail: "Transaction fail!",
    assetHasRegisterd: "Asset has been registered by someone.",
    steemAccountEmpty: "Steem account missing",
    steemAccountActiveKeyEmpty: "Steem account or active key missing",
    hiveAccountEmpty: "Hive account missing",
    hiveAccountActiveKeyEmpty: "Hive accout or active key missing",
    tokenDeploying:
      "There's token in deploying, please wait or refresh page to try.",
  },
  community: {
    community: "Community",
    percentage: "Percentage",
    communityInfo: "Information",
    social: "Social",
    pool: "Pool",
    edit: "Edit ",
    create: "Complete ",
    communityList: "Community List",
    communityTokenList: "C-Token List",
    communityName: "Name",
    communityLink: "Offcial Link",
    communityDesc: "Description",
    communityLogo: "Logo",
    communityThemeColor: "Theme color",
    communityPoster: "Poster",
    communityBalance: "Community Balance",
    communityAsset: "Community Asset",
    commit: "Commit",
    inputName: "Please input Community Name",
    inputLink: "Please input Community Website Link",
    inputDesc: "Plese input Community Description ",
    inputApy: "Please input Apy",
    uploadLogo: "Upload Logo",
    picTip:
      "The recommended size is {size} ，smaller than 2M, support jpg、png、jpeg formats",
    uploadPoster: "Upload Poster",
    poster: "Poster",
    noCommunity: "You have no community yet",
    gotoCreate: "Go to create now",
    editTip:
      "Uploading community information requires the use of your wallet signature, this operation will not cost you anything, please rest assured to use。",
    sign: "Sign and upload",
    createCommunity: "Create you exclusive staking economy",
    step1: "Step 1",
    step2: "Step 2",
    yourCTokenId: "Step 1：Choose an asset",
    settingTokenDistribution: "Step 2：Setting your asset distribution",
    tokenEra: "Total distribution by current policy",
    currentBlock: "Current Block height",
    startBlock: "Start Block",
    inputStopBlock: "Input Stop Block height",
    inputBlockReward: "Input rewards per Block",
    stopBlock: "Stop Block",
    rewardAmount: "Reward Amount",
    comfirmAdd: "Comfirm Add",
    personal: "My personal registred asset",
    official: "Officially provided asset",
    addPoolSuccess: "Staking Pool successfully added",
    updatePoolSuccess: "Staking Pool successfully updated",
    dashboard: "Dashboard",
    setting: "Setting",
    updatePools: "Adjust Staking Pool data",
    addPool: "Add Staking Pool",
    stopPool: "Stop pool",
    withdrawPool: "Clear pool",
    removePool: "Remove pool",
    Active: "Active",
    Stopped: "Stopped",
    CanRemove: "Stopped",
    Removed: "Removed",
    noPools: "No Staking Pools yet",
    userCount: "Number of users",
    totalDeposit: "Total staking",
    totalDepositDollor: "TVL",
    hasMined: "Token has Mined",
    more: "More",
    join: "Join",
    createYourCommunity: "Create Your Community",
    communityDashboard: "Manage Your Community",
    charge: "Charge",
    communityCharge: "Community Charge",
    confirmCharge: "Confirm Charge",
    chargeSuccess: "Charge success",
    devAddress: "Community fund address",
    devRatio: "Community commision ratio",
    inputDevRatio: "Please input number between 0-100",
    inputDevAddress: "Input community devAddress",
    publishPool: "Publish Staking Pool",
    unPublished: "UnPublished",
    publishBlog: "Publish Blog",
    communityBlog: "Community Blog",
    socialMedial: "Social Medial",
    blogTag: "Blog Tag",
    createBlog: "Create blog",
    createBlogMemo:
      "Your blog tag and private key are listed below. Please preserve them carefully. We do not provide custody services. The process of blog account creation will consume your 3 STEEM as services fee.",
    blogMainPassword: "Password",
    publishBlogSuccess: "Publish Blog Successs!",
    distributionLimit: "Max distribution is 6",
    bindBlog: "Bind your community blog",
    bindBlogMemo: "Please input your steem community tag to bind.eg:hive-12345",
    inputBlogTag: "Please input your steem community tag",
    updateSocialSuccess: "Update social info success!",
    createNeedStake: "Create new pool need you stake:",
    notYourCommunity: "Wrong community info",
  },
  asset: {
    asset: "Asset",
    network: "Network",
    native: "Native asset",
    foreign: "Foreign asset",
    registerCtokenTitle: "Register your community asset",
    registerTitle: "Register your exclusive asset",
    yourSteemAccount: "Your Steem/Hive account",
    assetName: "Name this asset",
    assetProperties: "Asset properites",
    register: "Register",
    homeLocation: "Home Token location",
    tokenName: "Token Name",
    tokenSymbol: "Token Symblo",
    distributionAmount: "Distribution amount",
    inputHomeLocation: "Please input ERC20 address",
    inputTokenName: "Please input token name",
    inputTokenSymbol: "Please input token symbol",
    inputDistributionAmount: "Please input distribution amount",
    notDeploy: "No Token yet?",
    noTokens: "Didn't create community token",
    deployOne: "Depoly one",
    deploy: "Deploy",
    deployYourToken: "Deploy one token",
    notRegister: "No registered asset yet？",
    registerOne: "Register one",
    registerCAsset: "Register community asset",
    inputAccount: "Please input your account",
    inputAssetName: "Please input asset name",
    parachainId: "ParahainID",
    inputParachainId: "Please input ParachainID",
    trieIndex: "Trie Index",
    inputTrieIndex: "Please input Trie Index",
    communityAddress: "Community address（Polkadot address）",
    inputCommunityAddress: "Please input community polkdot address",
    endingBlock: "Asset valid date",
    inputEndingBlock:
      "Please input the ending block height when the asset is invalid",
    registerSteemTab: "Register STEEM/HIVE binding asset",
    registerCrowdloanTab: "Register Polkadot/Kusma Crwodloan binding asset",
    registerValidatorTab: "Register olkadot/Kuama validaots node binding asset",
    validatorNodeAddress: "Validator node address",
    inputValidatorNode: "Please input validator node address",
    delegation: "Delegation",
    crowdloan: "Crowdloan",
    validator: "Validator node",
    addPool: "Add Staking Pool",
    updatePool: "Adjust staking pool",
    poolRatios: "Staking pool profit sharing ratio",
    poolInfo: "Staking pool information",
    stakingAsset: "Staking asset",
    selectStakingAsset: "Please select staking asset",
    isHomeAsset: "Home asset",
    isForeignAsset: "Foreign asset",
    poolName: "Staking pool name",
    inputPoolName: "Please input staking pool name",
    cap: "Mkt Cap",
    price: "Price",
    totalSupply: "Supply",
  },
  game: {
    game: 'Game',
    recommend: 'Recommend',
    popular: 'Popular',
    others: 'Others',
    noGames: 'No games',
    create: "Create",
    edit: "Edit",
    gameName: "Game name",
    gameLink: "Page link",
    gameDesc: "Description",
    gameCategory: "Category",
    gameLogo: "Logo",
    gamePoster: "Poster",
    inputGameName: "Please input game name",
    inputGameLink: "Please input game official page link",
    inputGameDesc: "Please descipte your game",
    noGame: "Game not exsit",
  },
};
